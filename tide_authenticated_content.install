<?php

/**
 * @file
 * Tide Authenticated Content module install file.
 */

use Drupal\field\Entity\FieldConfig;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\paragraphs\Entity\ParagraphsType;
use Drupal\node\Entity\NodeType;
use Drupal\user\Entity\Role;

/**
 * Implements hook_install().
 */
function tide_authenticated_content_install() {
  if (!\Drupal::service('config.installer')->isSyncing()) {
    $module_installer = \Drupal::service('module_installer');
    $module_installer->install([
      'key',
      'jwt',
      'jwt_auth_consumer',
      'jwt_auth_issuer',
      'permissions_by_term',
      'rest',
    ]);
  }
}

/**
 * Implements hook_uninstall().
 */
function tide_authenticated_content_uninstall() {
  // Remove permissions on tide_authenticated_content to Approver and Editor.
  $roles = ['approver', 'editor'];
  $permissions = [
    'create terms in authenticated_content',
    'create terms in authenticated_content',
  ];

  foreach ($roles as $role_name) {
    $role = Role::load($role_name);
    if ($role) {
      foreach ($permissions as $permission) {
        $role->revokePermission($permission);
      }
      $role->save();
    }
  }
  // Clean up paragraphs.
  $paragraph_query = \Drupal::entityTypeManager()
    ->getStorage('paragraph')
    ->getQuery();
  $results = $paragraph_query->condition('type', 'user_authentication_block')
    ->execute();
  if ($results) {
    $paragraphs = Paragraph::loadMultiple($results);
    \Drupal::entityTypeManager()->getStorage('paragraph')->delete($paragraphs);
  }
  if ($paragraph_type_entity = ParagraphsType::load('user_authentication_block')) {
    \Drupal::entityTypeManager()
      ->getStorage('paragraphs_type')
      ->delete([$paragraph_type_entity]);
  }
  $node_types = NodeType::loadMultiple();
  if ($node_types) {
    foreach ($node_types as $node_type => $details) {
      $node_fields = \Drupal::service('entity_field.manager')
        ->getFieldDefinitions('node', $node_type);
      if (isset($node_fields['field_authenticated_content'])) {
        FieldConfig::loadByName('node', $node_type, 'field_authenticated_content')
          ->delete();
      }
    }
  }
  // Delete tide_authenticated_content related rows.
  \Drupal::database()
    ->delete('node_access')
    ->condition('realm', 'tide_authenticated_content')
    ->execute();
}
